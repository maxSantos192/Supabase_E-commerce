CREATE TABLE public.clientes (
  id UUID PRIMARY KEY REFERENCES auth.users(id) ON DELETE CASCADE,
  nome_completo TEXT,
  telefone TEXT,
  endereco TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE public.produtos (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  nome TEXT NOT NULL,
  descricao TEXT,
  preco NUMERIC(10, 2) NOT NULL CHECK (preco >= 0),
  estoque INT NOT NULL DEFAULT 0 CHECK (estoque >= 0),
  imagem_url TEXT,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TYPE public.pedido_status AS ENUM (
  'pendente',
  'pagamento_aprovado',
  'enviado',
  'entregue',
  'cancelado'
);

CREATE TABLE public.pedidos (
  id BIGINT PRIMARY KEY GENERATED BY DEFAULT AS IDENTITY,
  cliente_id UUID NOT NULL REFERENCES public.clientes(id) ON DELETE RESTRICT,
  status public.pedido_status NOT NULL DEFAULT 'pendente',
  total NUMERIC(10, 2) DEFAULT 0.00,
  created_at TIMESTAMPTZ DEFAULT NOW()
);

CREATE TABLE public.itens_pedido (
  pedido_id BIGINT NOT NULL REFERENCES public.pedidos(id) ON DELETE CASCADE,
  produto_id BIGINT NOT NULL REFERENCES public.produtos(id) ON DELETE RESTRICT,
  quantidade INT NOT NULL CHECK (quantidade > 0),
  preco_unitario NUMERIC(10, 2) NOT NULL,
  PRIMARY KEY (pedido_id, produto_id)
);